{"version":3,"sources":["api/pairs.js","components/AudioContext.jsx","components/About.jsx","components/Card.jsx","components/Pocket.jsx","tools/utilities.js","components/Activity.jsx","components/Contact.jsx","api/views.js","components/Index.jsx","components/Preferences.jsx","components/MenuIcon.jsx","components/MenuItems.jsx","components/Menu.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["currentPair","pairList","phonemeSymbols","phonemes","played","word1","word2","AudioContext","createContext","AudioProvider","children","useState","url","setURL","audio","Audio","Provider","_stopAudioPlayback","pause","value","playClip","clip","startTime","duration","currentTime","setTimeout","play","then","result","catch","error","console","log","_startAudioPlayback","About","props","Card","card","spelling","phonetic","image","image_","className","role","src","taboo","useContext","ref","refer","onMouseDown","alt","Pocket","phoneme","index","getCard","cardList","listOfCards","map","getCardList","onClick","removeFrom","array","item","removeAll","found","removed","Array","isArray","reduce","excess","entry","findIndex","indexOf","splice","pairs","require","phonemePairs","Object","keys","setPhonemePair","pair","pairMap","entries","shift","_getPhonemeData","a","ii","length","jj","Math","floor","random","shuffle","_getWordData","word","words","data","Activity","useFirstCard","cueRef","useRef","decoyRef","counter","setCounter","phoneme1","phoneme2","push","cards","getCards","playedCards","showNextCard","current","createCards","decoy","cue","phonemeData","pocket1","pocket2","event","target","closest","classList","add","playRightSequence","Contact","Views","Index","itemClicked","bind","items","id","this","startActivity","getList","Component","Preferences","Icon","d","opacity","MenuItems","itemSelected","Items","closeMenu","selectFromMenu","pane","Menu","React","createRef","callback","openMenu","state","open","ignoreOpen","toggleMenu","listener","document","body","addEventListener","type","timeout","contains","removeEventListener","menu_open","setState","itemClass","viewBox","preserveAspectRatio","App","view","setView","newView","View","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"4qGAaIA,EACAC,EACAC,EACAC,EAGAC,EAGAC,EAAOC,E,uDCfEC,EAAeC,0BAEfC,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9B,EAAwBC,mBALR,mBAKhB,mBAAQC,EAAR,KAAaC,EAAb,KAEMC,EAAQ,IAAIC,MAAMH,GAGlBI,EAAWT,EAAaS,SAExBC,EAAqB,WACzBH,EAAMI,SACI,GAuBZ,OACE,cAACF,EAAD,CACEG,MAAS,CACPP,MACAQ,SAVW,SAACC,IAdU,SAACA,GAC3B,kBAA+BA,EAA/B,GAAQC,EAAR,KACMC,EAAmC,KADzC,KAC4BD,GAC5BR,EAAMU,YAAcF,EACpBG,WAAWR,EAAoBM,GAE/BT,EAAMY,OACAC,MAAK,SAAAC,IACM,KACTC,OAAM,SAAAC,GACPC,QAAQC,IAAI,uBAAwBF,MAO3CG,CAAoBZ,IAQhBR,UAJJ,SAOGH,KCnCQwB,EAPD,SAACC,GACb,OACE,uDCqCWC,G,MAtCF,SAACD,GACZ,MAMIA,EAAME,KALRC,EADF,EACEA,SACAC,EAFF,EAEEA,SACAlB,EAHF,EAGEA,KACAmB,EAJF,EAIEA,MACAC,EALF,EAKEA,OAEIC,EAAY,SACEP,EAAMQ,KAAN,UACGR,EAAMQ,KADT,YAEA,IAEdC,EAAMT,EAAMU,OAASJ,GAAmBD,EACxC1B,EAAQgC,qBAAWvC,GAEzB,OACE,qBACEmC,UAAU,QACVK,IAAKZ,EAAMa,MAFb,SAIE,sBACEN,UAAWA,EAEXO,YAAa,kBAAMnC,EAAMM,SAASC,IAHpC,UAKE,qBAAKqB,UAAU,OAAOE,IAAI,sBAAsBM,IAAI,cACpD,sBAAKR,UAAU,QAAf,UACE,qBAAKE,IAAKA,EAAKM,IAAKZ,IACpB,mBAAGI,UAAU,WAAb,SAAyBH,IACzB,mBAAGG,UAAU,WAAb,SAAyBJ,SAPtBA,OCmBEa,EA1CA,SAAChB,GACd,IAAMrB,EAAQgC,qBAAWvC,GACjB6C,EAAiCjB,EAAjCiB,QAASC,EAAwBlB,EAAxBkB,MAAOhC,EAAiBc,EAAjBd,KAAMjB,EAAW+B,EAAX/B,OAExBkD,EAAU,SAAEjB,EAAMgB,GACtB,OACE,cAAC,EAAD,CAEEhB,KAAMA,GADDgB,IAeLE,EATc,WAClB,IAAMC,EAAcpD,EAAOqD,IAAIH,GAC/B,OACE,6BACGE,IAKUE,GACXhB,EAAS,kBAAcW,EAAQ,GAErC,OACE,sBACEX,UAAWA,EADb,UAIGa,EACD,qBAAKb,UAAU,WACf,yBACEA,UAAU,eACViB,QAAS,kBAAM7C,EAAMM,SAASC,IAFhC,cAII+B,EAJJ,SAJKV,I,cC2LEkB,G,YAAa,SAAbA,EAAcC,EAAOC,EAAMC,GACtC,IAaIV,EACAW,EAdAC,EAAU,EAGd,GAAIC,MAAMC,QAAQL,GAMhB,OALAG,EAAUH,EAAKM,QAAO,SAACC,EAAQC,GAE7B,OADAD,GAAUT,EAAWC,EAAOS,EAAOP,KAElC,GASL,IAOEC,KALEX,EADkB,oBAATS,EACDD,EAAMU,UAAUT,GAEhBD,EAAMW,QAAQV,IAGN,MAEhBD,EAAMY,OAAOpB,EAAO,GACpBY,GAAW,SAENF,GAAaC,GAEtB,OAAOC,IL1PHS,EAAQC,EAAQ,IAKTC,EAAeC,OAAOC,KAAKJ,EAAMA,OAgBvC,SAASK,EAAeC,GAAO,IAAD,EAiDEC,EAhDjCjF,IAAgBgF,IAKNJ,EAAaJ,QAAQQ,GACvB,IACVA,EAAOJ,EAAa,IAyCeK,EAtCPP,EAAMA,MAAMM,GAuC1C/E,EAAW4E,OAAOK,QAAQD,GAE1B/E,EAAiBD,EAASkF,QAC1BhF,EAAWD,EAAeuD,IAAI2B,GKiNT,SAACC,GAGtB,IAFA,IAAIC,EAAKD,EAAEE,OAEJD,GAAI,CACT,IAAME,EAAKC,KAAKC,MAAMD,KAAKE,SAAWL,GACtCA,GAAM,EAFG,MAGQ,CAACD,EAAEG,GAAKH,EAAEC,IAA1BD,EAAEC,GAHM,KAGDD,EAAEG,GAHD,MLnNXI,CAAQ3F,GA1CIA,EAASsF,OAAS,EACf,EACT,mBAAMrF,EAAe,GAAI,IAAzB,cAA8BA,EAAe,GAAI,IAAvDE,EAAM,EAENJ,EAAcgF,GA6ChB,SAASa,EAAazC,EAAS0C,GAG7B,OAFapB,EAAMqB,MAAM3C,GAAS0C,GAMpC,SAASV,EAAgBhC,GACvB,IAAM4C,EAAI,eAAOtB,EAAMqB,MAAM3C,GAASA,IAKtC,OAJA4C,EAAK5C,QAAUA,EAIR4C,EAITjB,EAAe,gBM/Ff,IAwJekB,EAtJE,SAAC9D,GAChB,IAII+D,EAJEpF,EAAQgC,qBAAWvC,GACnB4F,EAASC,mBACTC,EAAWD,mBACjB,EAA8BzF,mBAAS,GAAvC,mBAAO2F,EAAP,KAAgBC,EAAhB,KAGA,EN4BK,WACL,MAA+BrG,EAA/B,mBAAQsG,EAAR,KAAkBC,EAAlB,KAEIpG,GAASD,EAAOoG,GAAUhC,QAAQnE,GAAS,IAC7CD,EAAOoG,GAAUE,KAAKrG,GACtBD,EAAOqG,GAAUC,KAAKpG,IAIxB,IAAMqG,EAAQ1G,EAASkF,QAgBvB,OAfAlF,EAASyG,KAAKC,GAEdtG,EAAQwF,EAAaW,EAAUG,EAAM,IACrCrG,EAAQuF,EAAaY,EAAUE,EAAM,IAErC/C,EAAWxD,EAAOoG,GAAWnG,GAC7BuD,EAAWxD,EAAOqG,GAAWnG,GAEd,CACbH,WACAE,QACAC,QACAF,UM7CEwG,GAJFzG,EADF,EACEA,SACAE,EAFF,EAEEA,MACAC,EAHF,EAGEA,MACQuG,EAJV,EAIEzG,OA8EI0G,EAAe,WACFX,EAAOY,QACfrE,UAAY,QACrB6D,EAAWD,EAAU,IAiCvB,EAlFoB,WAGlB,IAAIK,EAqBJ,OAvBAT,IAAiBT,KAAKC,MAAsB,EAAhBD,KAAKE,UAI/BgB,EADET,EACM,CAAE5F,EAAOD,GAET,CAAEA,EAAOC,GAGP,CAAC,QAAS,OAAOmD,KAAI,SAACd,EAAMU,GACtC,IAAMhB,EAAOsE,EAAMtD,GACbN,EAAgB,QAATJ,EAAkBwD,EAASE,EAExC,OACE,cAAC,EAAD,CACEhE,KAAMA,EACNM,KAAMA,EACNE,OAAO,EACPG,MAAOD,OA+DQiE,GAAvB,mBAAQC,EAAR,KAAeC,EAAf,KACA,EArDkB/G,EAASsD,KAAI,SAAC0D,EAAa9D,GACzC,IAAQD,EAAkB+D,EAAlB/D,QAAS/B,EAAS8F,EAAT9F,KACXjB,EAASyG,EAAYzD,GAE3B,OAAO,cAAC,EAAD,CACLA,QAASA,EACTC,MAAOA,EACPhC,KAAMA,EACNjB,OAAQA,OA6Cd,mBAAQgH,EAAR,KAAiBC,EAAjB,KACMhG,EAAO6F,EAAI/E,MAAME,KAAKhB,KAI5B,OAHAP,EAAMM,SAASC,GAIb,qCACE,sBACEqB,UAAU,WACViB,QA1Bc,SAAA2D,GAClB,IAAMC,EAASD,EAAMC,OACrB,GAAyB,WAArBA,EAAO7E,UAAX,CAIA,IAAMU,EAAUmE,EAAOC,QAAQ,mBAAmB9E,UAClCwD,KAA6B,cAAX9C,GApBV,SAACA,GACR+C,EAAOY,QACfU,UAAUC,IAAI,UAAWtE,GAElC3B,WAAWqF,EAtGM,KAwHfa,CAAkBvE,GAbpBrB,QAAQC,IAAI,WA4BV,UAIGoF,EACAC,EACD,mBAAG3E,UAAU,OAAb,oCAGF,sBAAKA,UAAU,QAAf,UACGuE,EACAC,SC5IMU,EAPC,SAACzF,GAChB,OACE,yD,uCCIY0F,EARD,CACZ3F,QACA+D,WACA2B,UACAE,M,kDCAA,WAAY3F,GAAQ,IAAD,8BACjB,cAAMA,IAED4F,YAAc,EAAKA,YAAYC,KAAjB,gBAHF,E,2CAOnB,WAAW,IAAD,OACFC,EAAQrD,EAAanB,KAAK,SAAAuB,GAC9B,OACE,oBAEErB,QAAS,kBAAM,EAAKoE,YAAY/C,IAFlC,SAIGA,GAHIA,MAQX,OACE,oBACEkD,GAAG,QADL,SAGGD,M,yBAMP,SAAYjD,GACVD,EAAeC,GACfmD,KAAKhG,MAAMiG,kB,oBAIb,WAEE,OADaD,KAAKE,c,GArCFC,aDElBC,YEHkB,SAACpG,GACpB,OACE,8DC6BYqG,G,MAhCF,kBACX,oBAAG9F,UAAU,OAAb,UACE,sBAAM+F,EAAE,4BAKHC,QAAQ,MACb,sBAAMD,EAAE,iEAOR,sBAAMA,EAAE,iEAOR,sBAAMA,EAAE,sEC0BGE,EA/CG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qCACE,oBACElG,UAAU,eAEViB,QAAS,kBAAMiF,EAAa,UAH9B,gCAEM,SAMN,oBACElG,UAAU,eAEViB,QAAS,kBAAMiF,EAAa,aAH9B,+BAEM,YAMN,oBACElG,UAAU,eAEViB,QAAS,kBAAMiF,EAAa,gBAH9B,wBAEM,cAMN,oBACElG,UAAU,eAEViB,QAAS,kBAAMiF,EAAa,UAH9B,gCAEM,SAMN,oBACElG,UAAU,eAEViB,QAAS,kBAAMiF,EAAa,YAH9B,uBAEM,eCdNC,EAAQ,SAAC1G,GACb,IAAQ2G,EAA+C3G,EAA/C2G,UAAWC,EAAoC5G,EAApC4G,eAAgBC,EAAoB7G,EAApB6G,KAAMtG,EAAcP,EAAdO,UAOzC,OAAO,oBACLwF,GAAG,QACHxF,UAAWA,EACXK,IAAKiG,EAHA,SAKL,cAAC,EAAD,CACEJ,aAXiB,SAAC9E,GACpBgF,IACAC,EAAejF,SA4GJmF,E,kDA3Fb,WAAY9G,GAAQ,IAAD,8BACjB,cAAMA,IAED6G,KAAOE,IAAMC,YAElB,EAAKC,SAAWjH,EAAMiH,SAEtB,EAAKC,SAAW,EAAKA,SAASrB,KAAd,gBAChB,EAAKc,UAAY,EAAKA,UAAUd,KAAf,gBACjB,EAAKsB,MAAQ,CAAEC,MAAM,GAErB,EAAKF,WACL5H,WAAW,EAAKqH,UArCK,KAyBJ,E,4CAgBnB,SAASxB,GACP,IAAIa,KAAKqB,WAAT,CAIIlC,GACFa,KAAKsB,YAAW,GAGlB,IAAMC,EAAWvB,KAAKW,UACtBa,SAASC,KAAKC,iBAAiB,aAAcH,GAAU,GACvDC,SAASC,KAAKC,iBAAiB,YAAaH,GAAU,M,uBAIxD,SAAUpC,GAAQ,IAAD,OAIf,GAAIA,GAAwB,eAAfA,EAAMwC,KAEjB3B,KAAK4B,QAAUtI,YAAW,kBAAM,EAAKsI,QAAU,IAAG,UAE7C,GAAI5B,KAAK4B,QACd,OAGF,IAAMf,EAAOb,KAAKa,KAAKjC,QACvB,IAAKO,GAAU0B,IAASA,EAAKgB,SAAS1C,EAAMC,QAAU,CACpDY,KAAKsB,YAAW,GAIhBtB,KAAKqB,YAAa,EAClB/H,YAAW,kBAAM,EAAK+H,YAAa,IAAO,KAG1C,IAAME,EAAWvB,KAAKW,UACtBa,SAASC,KAAKK,oBAAoB,aAAcP,GAAS,GACzDC,SAASC,KAAKK,oBAAoB,YAAaP,GAAU,M,wBAK7D,SAAWQ,GACT,IAAMX,GAAQpB,KAAKmB,MAAMC,KACzBpB,KAAKgC,SAAS,CAAEZ,W,oBAIlB,WACE,IAAMa,EAAYjC,KAAKmB,MAAMC,KAAO,OAAS,GAE7C,OAAO,sBACHrB,GAAG,OADA,UAGH,cAAC,EAAD,2BACMC,KAAKhG,OADX,IAEEO,UAAW0H,EACXpB,KAAMb,KAAKa,KACXF,UAAWX,KAAKW,aAElB,qBACEZ,GAAG,WACHmC,QAAQ,cACRC,oBAAoB,gBAEpB3G,QAASwE,KAAKkB,SALhB,SAOE,cAAC,EAAD,a,GAtFSf,aClBJiC,EA3BH,SAACpI,GACX,MAA0BxB,mBAAS,YAAnC,mBAAQ6J,EAAR,KAAcC,EAAd,KAEM1B,EAAiB,SAAC2B,GACjBA,IACHA,EAAU,YAGZD,EAAQC,IAGJC,EAAO9C,EAAM2C,GAEnB,OACE,cAAC,EAAD,UACE,uBAAM9H,UAAU,oCAAhB,UACE,cAACiI,EAAD,CACEvC,cAAeW,IAEjB,cAAC,EAAD,CACEA,eAAgBA,UCfX6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnJ,MAAK,YAAkD,IAA/CoJ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCMdO,IAASC,OACP,cAAC,EAAD,IACA1B,SAAS2B,eAAe,SAM1BV,M","file":"static/js/main.d30b7f69.chunk.js","sourcesContent":["/**\n * /src/api/pairs.js\n */\n\nimport { shuffle, removeFrom } from '../tools/utilities'\nconst pairs = require('../json/pairs.json')\n\n// console.log(\"initializing pairs.js:\")\n// console.log(\"pairs:\", pairs)\n\nexport const phonemePairs = Object.keys(pairs.pairs)\nlet taboo = false\n\nlet currentPair    // \"ɪi\" <<< one of the entries in phonemePairs\nlet pairList       // [ [ \"bitch\", \"beach\" ],...[ \"wheel\", \"will\" ] ]\nlet phonemeSymbols // [ \"ɪ\", \"iː\" ]\nlet phonemes       // [ { symbol: \"/ɪ/\", audio: [0, 1] }, ...]\nlet currentIndex   // 0\nlet lastIndex      // index of list item in pairList\nlet played         // { \"/x/\": [ <card>, ... ]\n                   // , \"/y/\": [ <card>, ... ]\n                   // }\nlet word1, word2   // \"bitch\", \"beach\"\n\n\n\nexport function setPhonemePair(pair) {\n  if (currentPair === pair) {\n    return\n  }\n\n  // Choose the given pair, or the first available\n  const index = phonemePairs.indexOf(pair)\n  if (index < 0) {\n    pair = phonemePairs[0]\n  }\n\n  _setPairListAndPhonemeSymbols(pairs.pairs[pair])\n  lastIndex = pairList.length - 1\n  currentIndex = 0\n  played = { [phonemeSymbols[0]]:[], [phonemeSymbols[1]]:[] }\n\n  currentPair = pair\n}\n\n\nexport function getCards() {\n  const [ phoneme1, phoneme2 ] = phonemeSymbols\n\n  if (word1 && played[phoneme1].indexOf(word1) < 0 ) {\n    played[phoneme1].push(word1)\n    played[phoneme2].push(word2)\n  }\n\n  // Grab the first card and (for now) move it to the end\n  const cards = pairList.shift()\n  pairList.push(cards)\n\n  word1 = _getWordData(phoneme1, cards[0])\n  word2 = _getWordData(phoneme2, cards[1])\n\n  removeFrom(played[phoneme1], word1)\n  removeFrom(played[phoneme2], word2)\n\n  const output = {\n    phonemes\n  , word1\n  , word2\n  , played\n  }\n\n  return output\n}\n\n\nfunction _setPairListAndPhonemeSymbols(pairMap) {\n  pairList = Object.entries(pairMap)\n  // [[<ɪ>, <æ>], [<this>, <that>], [<tit>, <tat>], ...]\n  phonemeSymbols = pairList.shift()\n  phonemes = phonemeSymbols.map(_getPhonemeData)\n  shuffle(pairList)\n\n  // console.log(\"pairList:\", pairList)\n  // console.log(\"phonemeSymbols:\", phonemeSymbols)\n}\n\n\nfunction _getWordData(phoneme, word) {\n  const data = pairs.words[phoneme][word]\n\n  return data\n}\n\n\nfunction _getPhonemeData(phoneme) {\n  const data = {...pairs.words[phoneme][phoneme]}\n  data.phoneme = phoneme\n  // { clip: [ <startTime>, <endTime> ]\n  // , phoneme: <x>\n  // }\n  return data\n}\n\n\nsetPhonemePair(\"ɑʌ\")","/**\n * src/components/AudioContext\n */\n\nimport React, { createContext, useState } from 'react'\nconst AUDIO_URL = \"audio/pairs.mp3\"\n\nexport const AudioContext = createContext()\n\nexport const AudioProvider = ({ children }) => {\n  const [ url, setURL ] = useState(AUDIO_URL )\n  // eslint-disable-next-line\n  const audio = new Audio(url)\n  let playing = false\n\n  const Provider = AudioContext.Provider\n\n  const _stopAudioPlayback = () => {\n    audio.pause()\n    playing = false\n  }\n\n  const _startAudioPlayback = (clip) => {\n    const [ startTime, endTime ] = clip\n    const duration = (endTime - startTime) * 1000 // ms\n    audio.currentTime = startTime            // s\n    setTimeout(_stopAudioPlayback, duration)\n\n    audio.play()\n         .then(result => {\n           playing = true\n         }).catch(error => {\n           console.log(\"Audio.play() error:)\", error)\n         })\n  }\n\n  const playClip = (clip) => {\n    // TODO: Fade out current audio playback before\n    // starting to play new clip.\n    _startAudioPlayback(clip)\n  }\n\n  return (\n    <Provider\n      value = {{\n        url,\n        playClip,\n        setURL\n      }}\n    >\n      {children}\n    </Provider>\n  )\n}","/**\n * /src/components/About.jsx\n */\n\n\nimport React from 'react';\n\n\nconst About = (props) => {\n  return (\n    <h1>About page goes here</h1>\n  )\n}\n\n\nexport default About","/**\n * /src/components/Card.jsx\n */\n\n\nimport React, { useContext } from 'react'\nimport { AudioContext } from './AudioContext'\n\n\nconst Card = (props) => {\n  const {\n    spelling\n  , phonetic\n  , clip\n  , image\n  , image_\n  } = props.card\n  const className = \"card \"\n                  + ( props.role\n                    ? `${props.role} flipped`\n                    : \"\"\n                    )\n  const src = props.taboo ? (image_ || image) : image\n  const audio = useContext(AudioContext)\n\n  return (\n    <div\n      className=\"space\"\n      ref={props.refer}\n    >\n      <div\n        className={className}\n        key={spelling}\n        onMouseDown={() => audio.playClip(clip)}\n      >\n        <img className=\"back\" src=\"img/icons/sound.svg\" alt=\"play icon\" />\n        <div className=\"front\">\n          <img src={src} alt={spelling}/>\n          <p className=\"phonetic\">{phonetic}</p>\n          <p className=\"spelling\">{spelling}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nexport default Card","/**\n * /src/components/Pocket.jsx\n */\n\nimport React, { useContext } from 'react'\nimport { AudioContext } from './AudioContext'\n\nimport Card from './Card'\n\nconst Pocket = (props) => {\n  const audio = useContext(AudioContext)\n  const { phoneme, index, clip, played } = props\n\n  const getCard = ( card, index ) => {\n    return (\n      <Card\n        key={index}\n        card={card}\n      />\n    )\n  }\n\n  const getCardList = () => {\n    const listOfCards = played.map(getCard)\n    return (\n      <ul>\n        {listOfCards}\n      </ul>\n    )\n  }\n\n  const cardList = getCardList()\n  const className = `phoneme-${index + 1}`\n\n  return (\n    <div\n      className={className}\n      key={className}\n    >\n      {cardList}\n      <div className=\"pocket\"></div>\n      <button\n        className=\"play-phoneme\"\n        onClick={() => audio.playClip(clip)}\n      >\n        /{phoneme}/\n      </button>\n    </div>\n  )\n}\n\nexport default Pocket\n\n\n\n// <div className=\"phoneme-1\">\n//   <ul>\n//     {/* OLDER CARDS CAN GO HERE */}\n//     <li>\n//       <div className=\"card\">\n//         <img src=\"img/ɪ/bitch.jpg\" alt=\"bitch\" />\n//         <p className=\"phonetic\">/bɪʧ/</p>\n//         <p className=\"spelling\">bitch</p>\n//       </div>\n//     </li>\n//   </ul>\n//   {/* POCKET */}\n//   <div className=\"pocket\"></div>\n//   <button className=\"play-phoneme\">ɪ</button>\n// </div> */}","/**\n * /imports/tools/generic/utilities.js\n *\n * Provides a set of re-usable functions which can be imported\n * anywhere\n */\n\n\n\n/// COLOR FUNCTIONS //\n\nexport const rgbify = (color) => {\n  if (color.substring(0, 3).toLowerCase() === \"hsl\" ) {\n    return HSLtoRGB(color)\n  }\n\n  if (color[0] === \"#\") {\n    color = color.slice(1)\n  }\n\n  if (color.length === 3) {\n    color = color[0]+color[0]+color[1]+color[1]+color[2]+color[2]\n  }\n\n  const hex = parseInt(color, 16)\n\n  return [\n    hex >> 16           // red\n  ,(hex >>  8) & 0x00FF // green\n  , hex        & 0xFF   // blue\n  ]\n}\n\n\n\nexport const tweenColor = (color1, color2, ratio) => {\n  const rgb1 = rgbify(color1)\n  const rgb2 = rgbify(color2)\n\n  const hex = rgb1.map((value, index) => {\n    value = Math.round(value - (value - rgb2[index]) * ratio)\n    value = Math.max(0, Math.min(value, 255))\n\n    return ((value < 16) ? \"0\" : \"\") + value.toString(16)\n  })\n\n  return \"#\" + hex.join(\"\")\n}\n\n\n\nexport const toneColor = (color, ratio) => {\n  const prefix = color[0] === \"#\"\n\n  if (prefix) {\n    color = color.slice(1)\n  }\n\n  const rgb = rgbify(color)\n             .map( value => {\n    value = Math.floor(Math.max(0, Math.min(255, value * ratio)))\n    return ((value < 16) ? \"0\" : \"\") + value.toString(16)\n  })\n\n  return (prefix ? \"#\" : \"\") + rgb.join(\"\")\n}\n\n\n\nexport const translucify = (color, opacity) => {\n  if (color[0] === \"#\") {\n    color = color.slice(1)\n  }\n\n  const rgb = rgbify(color)\n\n  return `rgba(${rgb[0]}, ${rgb[1]}, ${rgb[2]}, ${opacity})`\n}\n\n\n// https://stackoverflow.com/a/20129594/1927589\n// https://qph.fs.quoracdn.net/main-qimg-aaa9a544d797f1109b29c55814319195.webp\nexport const getColor = ({ number, s=0.5, l=0.33, format=\"hsl\" }) => {\n  const h = number * 137.50776405 // ≈ golden angle: 180*(3-√5)\n\n  s = Math.max(0, Math.min(s, 1))\n  l = Math.max(0, Math.min(l, 1))\n\n  switch (format.toLowerCase()) {\n    case \"rgb\":\n      return hsl2rgb(h, s, l)\n\n    case \"hex\":\n      return hsl2hex(h, s * 100, l * 100)\n\n    default: // \"hsl\"\n      return `hsl(${h},${s*100}%,${l*100}%)`;\n  }\n}\n\n\n// https://stackoverflow.com/a/54014428/1927589\n// input: h in [0,360] and s,v in [0,1] - output: r,g,b in [0,1]\nexport const hsl2rgb = (h,s,l) => {\n  let a=s*Math.min(l,1-l);\n  let f= (n,k=(n+h/30)%12) => l - a*Math.max(Math.min(k-3,9-k,1),-1);\n  return [f(0),f(8),f(4)]\n}\n\n\n// https://stackoverflow.com/a/44134328/1927589\nexport const hsl2hex = (h, s, l) => {\n  h /= 360;\n  s /= 100;\n  l /= 100;\n  let r, g, b;\n  if (s === 0) {\n    r = g = b = l; // achromatic\n  } else {\n    const hue2rgb = (p, q, t) => {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    };\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n  const toHex = x => {\n    const hex = Math.round(x * 255).toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n  };\n  return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\n}\n\n\n\nexport const HSLtoRGB = (colorString )=> {\n  // \"hsl(412.523,50%,40%)\" <<< percentages\n  // \"412.523, 0.5, 0.4\"    <<< ratios\n  let rgb = [0, 0, 0]\n\n  const regex = /(hsl\\s*\\(\\s*)?([0-9.]+)\\s*,\\s*([0-9.]+)(%?)\\s*,\\s*([0-9.]+)(%?)\\s*\\)?/\n  const match = regex.exec(colorString)\n\n  if (match) {\n    let h = parseFloat(match[2], 10)\n    let s = parseFloat(match[3], 10)\n    let l = parseFloat(match[5], 10)\n\n    while (h > 360) {\n      h -= 360\n    }\n    while (h < 0) {\n      h += 360\n    }\n    if (match[4]) {\n      s /= 100\n    }\n    s = Math.max(0, Math.min(s, 1))\n    if (match[6]) {\n      l /= 100\n    }\n    l = Math.max(0, Math.min(l, 1))\n\n    rgb = hsl2rgb(h, s, l) // [<0.0-1.0>, <0.0-1.0>, <0.0-1.0>]\n         .map(number => Math.round(number * 255))\n  }\n\n  return rgb\n}\n\n\n/**\n * @param   {<type>}  color   Must be a color (rgb or hex)\n * @param   {object}  values  May be an object with the same\n *                            structure as defaults\n * @return  {object}  Returns an object with the same structure as\n *                    defaults, but where each value is a color\n */\nexport const buttonColors = (color, values) => {\n  const output = {\n    restBg:     1\n  , restTint:   1.5\n  , restShade:  0.75\n\n  , overBg:    1.1\n  , overTint:  1.65\n  , overShade: 0.667\n\n  , downBg:    0.95\n  , downTint:  1.333\n  , downShade: 0.6\n  }\n  const keys = Object.keys(output)\n\n  ;(function merge(input) {\n    if (typeof input === \"object\") {\n      keys.forEach( key => {\n        const value = input[key]\n        if (!isNaN(value)) {\n          if (value > 0) {\n            output[key] = value\n          }\n        }\n      })\n    }\n  })()\n\n  keys.forEach( key => (\n    output[key] = toneColor(color, output[key])\n  ))\n\n  return output\n}\n\n\n/// ARRAY FUNCTIONS ///\n\nexport const removeFrom = (array, item, removeAll) => {\n  let removed = 0\n\n  // If `item` is an array of items or functions, treat recursively\n  if (Array.isArray(item)) {\n    removed = item.reduce((excess, entry) => {\n      excess += removeFrom(array, entry, removeAll)\n      return excess\n    }, 0)\n\n    return removed\n  }\n\n  // If we get here, item is an individual items or function\n  let index\n    , found\n\n  do {\n    if (typeof item === \"function\") {\n      index = array.findIndex(item)\n    } else {\n      index = array.indexOf(item)\n    }\n\n    found = !(index < 0)\n    if (found) {\n      array.splice(index, 1)\n      removed += 1\n    }\n  } while (removeAll && found)\n\n  return removed\n}\n\n\n\nexport const getDifferences = () => {\n  let  previous = []\n\n  return (array) => {\n    const plus = array.filter(item => previous.indexOf(item) < 0)\n    const minus = previous.filter(item => array.indexOf(item) < 0)\n    previous = [...array]\n\n    return { plus, minus }\n  }\n}\n\n\n\nexport const trackChanges = (array) => {\n  let  previous = [...array]\n\n  return () => {\n    const plus = array.filter(item => previous.indexOf(item) < 0)\n    const minus = previous.filter(item => array.indexOf(item) < 0)\n    previous = [...array]\n\n    return { plus, minus }\n  }\n}\n\n\n\nexport const shuffle = (a) => {\n  let ii = a.length\n\n  while (ii) {\n    const jj = Math.floor(Math.random() * ii)\n    ii -= 1;\n    [a[ii], a[jj]] = [a[jj], a[ii]]\n  }\n\n  return a // for chaining\n}\n\n\n\nexport const getRandom = (max, min = 0) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\n\n\nexport const getRandomFromArray = (array) => {\n  return array[Math.floor(Math.random() * array.length)]\n}\n\n\n\nexport const arrayOverlap = (array1, array2) => {\n  if (!array1 || !array1.length || !array2 || !array2.length) {\n    return []\n  }\n\n  return array1.filter( item => array2.includes(item) )\n}\n\n\n\nexport const getUnused = (source, used, tolerateDuplicates) => {\n  const unused = source.slice(0)\n  used.forEach(item => removeFrom(unused, item))\n  let item = getRandomFromArray(unused)\n\n  if (!item && tolerateDuplicates) {\n    // May return the same item multiple times,\n    // rather than creating a smooth spread\n    item = getRandomFromArray(source)\n  }\n\n  return item\n}\n\n\n\n/// MOUSE/TOUCH EVENT FUNCTIONS ///\n\nexport const getPageXY = (event) => {\n  if (event.targetTouches && event.targetTouches.length) {\n    event = event.targetTouches[0] || {}\n  }\n\n  return { x: event.pageX, y: event.pageY }\n}\n\n\n\nexport const getXY = (event, frame) => {\n  if ([\"client\", \"page\", \"offset\"].indexOf(frame) < 0) {\n    frame = \"client\"\n  }\n  if (event.targetTouches && event.targetTouches.length) {\n    event = event.targetTouches[0] || {}\n  }\n\n  return { x: event[frame + \"X\"], y: event[frame + \"Y\"] }\n}\n\n\n\n/**\n * Returns a promise which will be:\n * * resolved if the mouse or touch moves more than triggerDelta\n *   pixels in any direction\n * * rejected if the mouse is released/touch gesture ends before\n *   moving that far\n *\n * @param  {event}  event should be a mousedown or touchstart event\n * @param  {number} triggerDelta should be a positive number of pixels\n *\n * @return  {promise}\n */\nexport const detectMovement = (event, triggerDelta) => {\n  const trigger2 = triggerDelta * triggerDelta\n\n  function movementDetected(resolve, reject) {\n    const { x: startX, y: startY } = getPageXY(event)\n    const options = { event, drag, drop }\n    const cancel = setTrackedEvents(options)\n    // { actions: { move: <\"touchmove\" | \"mousemove\">\n    //              end:  <\"toucheend\" | \"mouseup\">\n    // , drag: function\n    // , drop: function\n    // }\n\n    // Check if the mouse/touch has moved more than triggerDelta\n    // pixels in any direction, and resolve promise if so.\n    function drag(event) {\n      const { x, y } = getPageXY(event)\n      const deltaX = startX - x\n      const deltaY = startY - y\n      const delta2 = (deltaX * deltaX + deltaY * deltaY)\n\n      if (delta2 > trigger2) {\n        setTrackedEvents(cancel)\n        resolve()\n      }\n    }\n\n    // Reject promise if the mouse is release before the mouse/touch\n    // moved triggerDelta pixels in any direction.\n    function drop(event) {\n      setTrackedEvents(cancel)\n      reject()\n    }\n  }\n\n  return new Promise(movementDetected)\n}\n\n\n\nexport const setTrackedEvents = ({ actions, event, drag, drop }) => {\n  // Omit event to cancel tracking\n  const body = document.body\n\n  if (event) {\n    if (typeof actions !== \"object\") {\n      actions = {}\n    }\n\n    if (event.type === \"touchstart\") {\n      actions.move  = \"touchmove\"\n      actions.end   = \"touchend\"\n    } else {\n      actions.move  = \"mousemove\"\n      actions.end   = \"mouseup\"\n    }\n\n    body.addEventListener(actions.move, drag, false)\n    body.addEventListener(actions.end, drop, false)\n\n  } else {\n    body.removeEventListener(actions.move, drag, false)\n    body.removeEventListener(actions.end, drop, false)\n  }\n\n  return { actions, drag, drop }\n}\n\n\n/// RECT & OBJECT FUNCTIONS ///\n\nexport const intersect = (rect1, rect2) => {\n  return rect1.x < rect2.right\n      && rect2.x < rect1.right\n      && rect1.y < rect2.bottom\n      && rect2.y < rect1.bottom\n}\n\n\n\nexport const intersection = (rect1, rect2) => {\n  const left   = Math.max( rect1.left || rect1.x || 0\n                         , rect2.left || rect2.x || 0\n                         )\n  const right  = Math.min( rect1.right||rect1.left+rect1.width||0\n                         , rect2.right||rect2.left+rect2.width||0\n                         )\n  if (!(left < right)) {\n    return 0\n  }\n\n  const top    = Math.max( rect1.top || rect1.y || 0\n                         , rect2.top || rect2.y || 0\n                         )\n  const bottom = Math.min( rect1.bottom||rect1.top+rect1.height||0\n                         , rect2.bottom||rect2.top+rect2.height||0\n                         )\n  if (!(top < bottom)) {\n    return 0\n  }\n\n  const x = left\n  const y = top\n  const width  = right - x\n  const height = bottom - y\n\n  return { x, y, left, right, top, bottom, width, height }\n}\n\n\n\nexport const union = (rects) => {\n  const [ rect, ...rest ] = rects\n  let { left, right, top, bottom } = rect\n\n  rest.forEach( rect => {\n    left   = Math.min(left,   rect.left)\n    right  = Math.max(right,  rect.right)\n    top    = Math.min(top,    rect.top)\n    bottom = Math.max(bottom, rect.bottom)\n  })\n\n  const x = left\n  const y = top\n  const width = right - left\n  const height = bottom - top\n\n  return { x, y, left, right, top, bottom, width, height }\n}\n\n\n\nexport const pointWithin = ( x, y, rect ) => {\n  return rect.x <= x\n      && rect.y <= y\n      && rect.right > x\n      && rect.bottom > y\n}\n\n\n/**\n * Calculates which fraction of rect shares it area with container\n */\nexport const overlap = (rect, container) => {\n  let overlap = intersection(rect, container) // 0 or rect object\n\n  if (overlap) {\n    const width  = rect.width || (rect.left - rect.right)\n    const height = rect.height || (rect.bottom - rect.top)\n    overlap = (overlap.width * overlap.height) / (width * height)\n  }\n\n  return overlap\n}\n\n\n\nexport const valuesMatch = (a, b) => {\n  if ( !a || typeof a !== \"object\" || !b || typeof b !== \"object\") {\n    return false\n  }\n\n  const propsA = Object.getOwnPropertyNames(a)\n  const propsB = Object.getOwnPropertyNames(b)\n\n  if (propsA.length !== propsB.length) {\n    return false\n  }\n\n  const total = propsA.length\n  for ( let ii = 0; ii < total; ii += 1 ) {\n    const prop = propsA[ii]\n\n    if (a[prop] !== b[prop]) {\n      return false\n    }\n\n    if (!removeFrom(propsB, prop)) {\n      // prop is undefined in a and missing in b\n      return false\n    }\n  }\n\n  return true\n}\n\n\n\nexport const valuesDontMatch = (a, b) => {\n  const nonMatching = {}\n\n  if ( !a || typeof a !== \"object\" || !b || typeof b !== \"object\") {\n    return { a, b }\n  }\n\n  const propsA = Object.getOwnPropertyNames(a)\n  const propsB = Object.getOwnPropertyNames(b)\n\n  propsA.forEach(prop => {\n    if (propsB.indexOf(prop) < 0) {\n      nonMatching[prop] = [\"delete\", a[prop]]\n\n    } else {\n      removeFrom(propsB, prop)\n\n      const valueA = a[prop]\n      const valueB = b[prop]\n\n      // if (path) {\n      //   prop = path + \".\"+ prop\n      // }\n\n      if (typeof valueA === \"object\" && typeof valueB === \"object\") {\n        const nested = valuesDontMatch(valueA, valueB)\n        if (nested) {\n          nonMatching[prop] = nested\n        }\n\n      } else if (valueA !== valueB) {\n        nonMatching[prop] = [\n          \"change\"\n       , getString(valueA)\n       , getString(valueB)\n       ]\n      }\n    }\n  })\n\n  propsB.forEach(prop => {\n    if (propsA.indexOf(prop) < 0) {\n      // if (path) {\n      //   prop = path + \".\"+ prop\n      // }\n\n      nonMatching[prop] = [\"insert\", getString(b[prop])]\n    }\n  })\n\n  if (Object.keys(nonMatching).length) {\n    return nonMatching\n  }\n}\n\n\n\nexport const deleteFrom = (object, key, removed) => {\n  if (typeof removed !== \"object\") {\n    removed = {}\n  }\n\n  // If `key` is an array of keys, treat recursively\n  if (Array.isArray(key)) {\n    key.forEach( entry => deleteFrom(object, entry, removed) )\n    return removed\n\n  } else if (key === undefined) {\n    key = (key, value) => (value === undefined || value === null)\n  }\n\n  // If we get here, key is an individual item\n  if (typeof key === \"function\") {\n    const keys = Object.keys(object)\n    keys.forEach( property => {\n      const value = object[property]\n      const deleteIt = key(property, value)\n      if (deleteIt) {\n        removed[property] = value\n        delete object[property]\n      }\n    })\n\n  } else if (object.hasOwnProperty(key)) {\n    removed[key] = object[key]\n    delete object[key]\n  }\n\n  return removed\n}\n\n\n// FONTS //\n\nexport const getFontFamily = (ff) => {\n  const start = ff.indexOf('family=')\n  if (start === -1) return 'sans-serif'\n  let end = ff.indexOf('&', start)\n  if(end === -1) end = undefined\n  ff = ff.slice(start + 7, end).replace(\"+\", \" \")\n  ff = '\"'+ ff + '\"'\n  return ff // + ', sans-serif'\n}\n\n\n// ENCRYPTION\n\n// by bryc https://stackoverflow.com/a/52171480/1927589\nexport const hash = (str, seed = 0) => {\n  let h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed\n  for (let i = 0, ch; i < str.length; i++) {\n      ch = str.charCodeAt(i)\n      h1 = Math.imul(h1 ^ ch, 2654435761)\n      h2 = Math.imul(h2 ^ ch, 1597334677)\n  }\n  h1 = Math.imul(h1 ^ (h1>>>16), 2246822507)\n     ^ Math.imul(h2 ^ (h2>>>13), 3266489909)\n  h2 = Math.imul(h2 ^ (h2>>>16), 2246822507)\n     ^ Math.imul(h1 ^ (h1>>>13), 3266489909)\n\n  return 4294967296 * (2097151 & h2) + (h1>>>0)\n}\n\n\n// IMAGES //\n\n// Inspired by https://ourcodeworld.com/articles/read/683/how-to-remove-the-transparent-pixels-that-surrounds-a-canvas-in-javascript\n// MIT http://rem.mit-license.org\nexport const trimImage = (image) => {\n  const c = document.createElement(\"canvas\")\n  c.width = image.width\n  c.height = image.height\n\n  const ctx = c.getContext('2d')\n  ctx.drawImage(image, 0, 0)\n\n  const copy = document.createElement('canvas').getContext('2d')\n  const pixels = ctx.getImageData(0, 0, c.width, c.height)\n  const l = pixels.data.length\n  const bound = {\n    top: null\n  , left: null\n  , right: null\n  , bottom: null\n  }\n  let ii\n    , x\n    , y\n\n  // Iterate over every pixel to find the highest\n  // and where it ends on every axis ()\n  for (ii = 0; ii < l; ii += 4) {\n      if (pixels.data[ii + 3] !== 0) {\n          x = (ii / 4) % c.width\n          y = ~~((ii / 4) / c.width)\n\n          if (bound.top === null) {\n              bound.top = y\n          }\n\n          if (bound.left === null) {\n              bound.left = x\n          } else if (x < bound.left) {\n              bound.left = x\n          }\n\n          if (bound.right === null) {\n              bound.right = x\n          } else if (bound.right < x) {\n              bound.right = x\n          }\n\n          if (bound.bottom === null) {\n              bound.bottom = y\n          } else if (bound.bottom < y) {\n              bound.bottom = y\n          }\n      }\n  }\n\n  // Calculate the height and width of the content\n  const trimHeight = bound.bottom - bound.top\n  const trimWidth = bound.right - bound.left\n  const trimmed = ctx.getImageData(\n    bound.left\n  , bound.top\n  , trimWidth\n  , trimHeight\n  )\n\n  // console.log(bound)\n\n  copy.canvas.width = trimWidth\n  copy.canvas.height = trimHeight\n  copy.putImageData(trimmed, 0, 0)\n\n  // Return an image\n  const trimmedImage = new Image()\n  trimmedImage.src =copy.canvas.toDataURL()\n\n  return trimmedImage\n}\n//\n// window.trimImage = trimImage\n\n\n\n// STRINGS //\n\n/** Adds customizable inserts to a string (e.g. Welcome <username>)\n *\n * @param      {string}  phrase   string OR\n *                                { simple:  \"Log in\"\n *                                , replace: \"Log in as ^0\"\n *                                }\n * @param     {object}   options  { \"^0\": \"admin\", ... }\n *\n * @return    {string}   string (with customized inserts)\n */\nexport const substitute = (phrase, options) => {\n  if (options && typeof options === \"object\") {\n    if (typeof phrase === \"object\") {\n      phrase = phrase.replace\n    }\n\n    for (let key in options) {\n      phrase = phrase.replace(key, options[key])\n    }\n\n  } else if (typeof phrase === \"object\") {\n    phrase = phrase.simple\n  }\n\n  // Replace underscores with non-breaking spaces\n  phrase = phrase.replace(/_/g, \" \")\n\n  return phrase\n}\n\n\n/**\n * Returns the best localized string from a map of phrases\n *\n * @param   {object}  phraseData   { ...\n *                                 , \"co-DE\": \"regional string\"\n *                                 , \"co\": \"generic string\"\n *                                 , \"xx\": {\n *                                     simple:  \"Log in\"\n *                                   , replace: \"Log in as ^0\"\n *                                   }\n *                                 , \"zz\": \"String with ^0 to replace\"\n *                                 , ...\n *                                 }\n * @param   {string}  code         language code ≈ \"co\" or \"co-DE\"\n * @param   {object}  options      { \"^0\": \"admin\", ... }\n *                                 OR\n *                                 \"as_is\", in which case any object\n *                                 containing simple and replace\n *                                 strings will be returned as an\n *                                 object\n *                                 OR\n *                                 other values are ignored\n *\n * @return  {string}  \"<Missing>\" or the localized string\n */\nexport const getLocalized = (phraseData, code = \"en\", options) => {\n  let phrase = phraseData[code]\n\n  if (!phrase) {\n    // Check if there is a more generic phrase without the region\n    const stripRegex = /-\\w+/\n    code = code.replace(stripRegex, \"\") // \"co-DE\" => \"co\"\n    phrase = phraseData[code]\n\n    if (!phrase) {\n      // Use any regional dialect of English as a fallback\n      const available = Object.keys(phraseData)\n      code = available.find(key => key.replace(stripRegex) === \"en\")\n\n      if (code) {\n        phrase = phraseData[code]\n      } else {\n        // Use the first available language\n        phrase = phraseData[available[0]]\n      }\n\n      if (!phrase) {\n        phrase = \"<Missing>\"\n      }\n    }\n  }\n\n  if (options !== \"as_is\") {\n    phrase = substitute(phrase, options)\n  }\n\n  return phrase\n}\n\n\n/** Selects a localized string from an array and customizes it\n *  replacing any (visible) underscores with (invisible)\n *  non-breaking spaces\n *\n * @param      {string}  cue     string cue value from corpus\n * @param      {string}  code    string language code, like \"co-DE\"\n * @param      {array}   corpus  [ { \"cue\": \"unique_string\"\n *                                 , \"co-DE\": \"fixed string\"\n *                                 , \"co\":    \"variable string ^0\"\n *                                 , ...\n *                                 }\n *                               , ...\n *                               ]\n * @param     {object}   options  { \"^0\": \"changeable part\", ...}\n *\n * @return    {string}   '***cue***' or localized string with &nbsp;\n */\nexport const localize = (cue, code, corpus, options) => {\n  let phrase\n\n  const phraseData = corpus.find(phrase => (\n    phrase.cue === cue\n  ))\n\n  if (phraseData) {\n    phrase = getLocalized(phraseData, code, options)\n  }\n\n  if (!phrase) {\n    console.log( \"Not found — cue:\", cue\n               , \"code:\", code\n               , \"phraseData:\", phraseData\n               )\n    phrase = \"***\" + cue + \"***\"\n  }\n\n  return phrase\n}\n\n\nexport const getString = item => {\n  const type = typeof item\n  try {\n    switch (type) {\n      case \"undefined\":\n        return \"undefined\"\n      case \"string\":\n      case \"object\":\n        return item\n      default:\n        if (item.toString) {\n          return item.toString()\n        } else {\n          return item\n        }\n    }\n  } catch {\n    return \"Unable to convert \" + type + \": \" + item\n  }\n}\n\n\n// HTML ELEMENTS //\n\n\n/** Returns index of the child of parentTag that contains element\n *\n * This is useful when you want to find (for instance) which list\n * item was selected, given that the event occurred on a child of the\n * list item.\n *\n * @param    {<type>}          element    An HTML element\n * @param    {string}          parentTag  The string tag of the parent\n *                                        of the element that contains\n *                                        `element`. \"UL\" by default.\n * @return   {integer}  -1 if element is not valid or if it does not\n *                      have a parent with the given tag, Non-negative\n *                      integer if the element's parent is found.\n */\nexport const getElementIndex = (element, parentTag) => {\n  let index = -1\n\n  if (element instanceof HTMLElement) {\n    parentTag = typeof parentTag === \"string\"\n              ? parentTag.toUpperCase()\n              : \"UL\"\n\n    while (element && element.parentNode.tagName !== parentTag) {\n      element = element.parentNode\n    }\n\n    if (element) {\n      const siblings = [].slice.call(element.parentNode.children)\n      index = siblings.indexOf(element)\n    }\n  }\n\n  return index\n}\n","import React, { useContext, useRef, useState } from 'react'\nimport { AudioContext } from './AudioContext'\n\nimport './Activity.css';\nimport Card from './Card'\nimport Pocket from './Pocket'\n\nimport { getCards } from '../api/pairs'\n\nconst REVIEW_DELAY = 2000;\n\nconst Activity = (props) => {\n  const audio = useContext(AudioContext)\n  const cueRef = useRef()\n  const decoyRef = useRef()\n  const [counter, setCounter] = useState(0)\n  let useFirstCard\n\n  const {\n    phonemes\n  , word1\n  , word2\n  , played: playedCards\n  } = getCards() // imported from pairs.js\n\n    // { \"phonemes\": [\n    //     { phoneme: \"ɪ\", audio: [0, 1]\n    //   , { phoneme: \"iː\", audio: [10, 11]\n    //   ],\n    //   \"word1\": {\n    //     \"spelling\": \"ship\",\n    //     \"phonetic\": \"/∫ɪp/\",\n    //     \"image\": \"img/ship.jpg\",\n    //     \"audio\": [\n    //       0,\n    //       1\n    //     ]\n    //   },\n    //   \"word2\": {\n    //     \"spelling\": \"sheep\",\n    //     \"phonetic\": \"/∫iːp/\",\n    //     \"image\": \"img/sheep.jpg\",\n    //     \"audio\": [\n    //       0,\n    //       1\n    //     ]\n    //   },\n    //   \"played\" {\n    //     \"ɪ\": [<card>, ...],\n    //     \"iː\": [<card>, ...]\n    //   }\n    // }\n\n\n  const createCards = () => {\n    useFirstCard = !!Math.floor(Math.random() * 2 )\n\n    let cards\n    if (useFirstCard) {\n      cards = [ word2, word1 ]\n    } else {\n      cards = [ word1, word2 ]\n    }\n\n    let roles = [\"decoy\", \"cue\"].map((role, index) => {\n      const card = cards[index]\n      const ref = (role === \"cue\") ? cueRef : decoyRef\n\n      return (\n        <Card\n          card={card}\n          role={role}\n          taboo={false}\n          refer={ref}\n        />\n      )\n    })\n\n    return roles\n  }\n\n\n  const createPockets = () => {\n    // cards, index, phoneme, audio, playAudio\n    const pockets = phonemes.map((phonemeData, index) => {\n      const { phoneme, clip } = phonemeData\n      const played = playedCards[phoneme]\n\n      return <Pocket\n        phoneme={phoneme}\n        index={index}\n        clip={clip}\n        played={played}\n      />\n    })\n\n    return pockets\n  }\n\n\n  const showNextCard = () => {\n    const cueSpace = cueRef.current\n    cueSpace.className = \"space\"\n    setCounter(counter + 1)\n  }\n\n\n  const playRightSequence = (phoneme) => {\n    const cueSpace = cueRef.current\n    cueSpace.classList.add(\"correct\", phoneme)\n\n    setTimeout(showNextCard, REVIEW_DELAY)\n  }\n\n\n  const showWrong = () => {\n    console.log(\"wrong\")\n  }\n\n\n  const checkAnswer = event => {\n    const target = event.target\n    if (target.className !== \"pocket\") {\n      return\n    }\n\n    const phoneme = target.closest(\"[class|=phoneme\").className\n    const correct = useFirstCard === (phoneme ===\"phoneme-1\")\n    if (correct) {\n      playRightSequence(phoneme)\n    } else {\n      showWrong()\n    }\n  }\n\n\n  const [ decoy, cue ] = createCards()\n  const [ pocket1, pocket2 ] = createPockets()\n  const clip = cue.props.card.clip // HACK\n  audio.playClip(clip) // audio won't play if no document interaction\n\n\n  return (\n    <>\n      <div\n        className=\"phonemes\"\n        onClick={checkAnswer}\n      >\n        {pocket1}\n        {pocket2}\n        <p className=\"rule\">Tap or drag to here</p>\n      </div>\n\n      <div className=\"pairs\">\n        {decoy}\n        {cue}\n      </div>\n    </>\n  )\n}\n\nexport default Activity;\n","/**\n * /src/components/Contact.jsx\n */\n\n\nimport React from 'react';\n\n\nconst Contact = (props) => {\n return (\n   <h1>Contact page goes here</h1>\n )\n}\n\n\nexport default Contact","import About from '../components/About'\nimport Activity from '../components/Activity'\nimport Contact from '../components/Contact'\nimport Index from '../components/Index'\nimport Preferences from '../components/Preferences'\n\nconst Views = {\n  About\n, Activity\n, Contact\n, Index\n, Preferences\n}\n\nexport default Views","/**\n * /src/components/Index.jsx\n */\n\n\nimport React, { Component } from 'react';\nimport { phonemePairs, setPhonemePair } from '../api/pairs'\n\n\nclass Index extends Component {\n  constructor(props) {\n    super(props)\n\n    this.itemClicked = this.itemClicked.bind(this)\n  }\n\n\n  getList() {\n    const items = phonemePairs.map( pair => {\n      return (\n        <li\n          key={pair}\n          onClick={() => this.itemClicked(pair)}\n        >\n          {pair}\n        </li>\n      )\n    })\n\n    return (\n      <ul\n        id=\"index\"\n      >\n        {items}\n      </ul>\n    )\n  }\n\n\n  itemClicked(pair) {\n    setPhonemePair(pair)\n    this.props.startActivity()\n  }\n\n\n  render() {\n    const List = this.getList()\n    return List\n  }\n}\n\n\nexport default Index","/**\n * /src/components/Preferences.jsx\n */\n\n\nimport React from 'react';\n\n\nconst Preferences = (props) => {\n return (\n   <h1>Preferences page goes here</h1>\n )\n}\n\n\nexport default Preferences","/**\n * Creates an SVG hamburger menu\n */\n\n\nimport React from 'react';\n\nconst Icon = () => (\n  <g className=\"menu\">\n    <path d=\"\n      M5,20\n      L5,80\n      H95\n      L95,20\n      z\" opacity=\"0\" />\n    <path d=\"\n      M15,10\n      H85\n      a 10 10 180 0 1 0 20\n      H15\n      a 10 10 180 0 1 0 -20\n      z\" />\n    <path d=\"\n      M15,40\n      H85\n      a 10 10 180 0 1 0 20\n      H15\n      a 10 10 180 0 1 0 -20\n      z\" />\n    <path d=\"\n      M15,70\n      H85\n      a 10 10 180 0 1 0 20\n      H15\n      a 10 10 180 0 1 0 -20\n      z\" />\n  </g>\n)\n\nexport default Icon","/**\n * /src/components/MenuItems.jsx\n */\n\n\nimport React, { Fragment } from 'react';\n\n\nconst MenuItems = ({ itemSelected }) => {\n  return (\n    <>\n      <li\n        className=\"unselectable\"\n        key=\"index\"\n        onClick={() => itemSelected(\"Index\")}\n      >\n        Select minimal pair\n      </li>\n\n      <li\n        className=\"unselectable\"\n        key=\"activity\"\n        onClick={() => itemSelected(\"Activity\")}\n      >\n        Return to activity\n      </li>\n\n      <li\n        className=\"unselectable\"\n        key=\"preferencs\"\n        onClick={() => itemSelected(\"Preferences\")}\n      >\n        Preferences\n      </li>\n\n      <li\n        className=\"unselectable\"\n        key=\"about\"\n        onClick={() => itemSelected(\"About\")}\n      >\n        About this activity\n      </li>\n\n      <li\n        className=\"unselectable\"\n        key=\"contact\"\n        onClick={() => itemSelected(\"Contact\")}\n      >\n        Contact us\n      </li>\n    </>\n  )\n}\n\n\nexport default MenuItems","/**\n * /imports/ui/Menu.jsx\n *\n * The Menu consists of three parts:\n * 1. A full-height background that slides in and out\n * 2. A list of clickable item that is a child of the background\n * 3. A hamburger icon which:\n *    • Is always visible\n *    • Slides out in sync with the background when the background's\n *      right edge is flush with the icon's right edge\n *    • Slides back in in sync with the background, until the\n *      background's right edge is less than the icon's width\n *    • Becomes semi-transparent when the background is not showing\n *    • Brightenes to full opacity when the background slides out\n * Clicking on the hamburger icon makes the background slide out or\n * back in again. Clicking anywhere outside the background while it\n * is visible will make it slide back in again.\n *\n * Clicking on on of the clickable items in the list will trigger\n * that item and slide the menu back in.\n */\n\nimport React, { Component } from 'react';\nimport './Menu.css';\nimport Icon from './MenuIcon'\nimport MenuItems from './MenuItems'\n\n\nconst CLOSE_MENU_DELAY = 1000\n\n\nconst Items = (props) => {\n  const { closeMenu, selectFromMenu, pane, className } = props\n\n  const itemSelected = (item) => {\n    closeMenu()\n    selectFromMenu(item)\n  }\n\n  return <ul\n    id=\"items\"\n    className={className}\n    ref={pane}\n  >\n    <MenuItems\n      itemSelected={itemSelected}\n    />\n  </ul>\n}\n\n\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props)\n\n    this.pane = React.createRef()\n\n    this.callback = props.callback // <<<<<\n\n    this.openMenu = this.openMenu.bind(this)\n    this.closeMenu = this.closeMenu.bind(this)\n    this.state = { open: true }\n\n    this.openMenu()\n    setTimeout(this.closeMenu, CLOSE_MENU_DELAY)\n  }\n\n\n  openMenu(event) {\n    if (this.ignoreOpen) {\n      return\n    }\n\n    if (event) {\n      this.toggleMenu(true)\n    }\n\n    const listener = this.closeMenu\n    document.body.addEventListener(\"touchstart\", listener, true)\n    document.body.addEventListener(\"mousedown\", listener, true)\n  }\n\n\n  closeMenu(event) {\n    // Check if the click was inside the slide-out menu. If not,\n    // close the menu\n\n    if (event && event.type === \"touchstart\") {\n      // Prevent the mouseup from firing right behind\n      this.timeout = setTimeout(() => this.timeout = 0, 300)\n      // console.log(\"Menu closeMenu timeout\", this.timeOut)\n    } else if (this.timeout) {\n      return\n    }\n\n    const pane = this.pane.current\n    if (!event || (pane && !pane.contains(event.target))) {\n      this.toggleMenu(false)\n      // Prevent the menu from reopening immediately if the click to\n      // close was on the Icon\n\n      this.ignoreOpen = true\n      setTimeout(() => this.ignoreOpen = false, 100)\n      // console.log(\"Menu closeMenu timeout\", timeOut)\n\n      const listener = this.closeMenu\n      document.body.removeEventListener(\"touchstart\", listener,true)\n      document.body.removeEventListener(\"mousedown\", listener, true)\n    }\n  }\n\n\n  toggleMenu(menu_open) {\n    const open = !this.state.open\n    this.setState({ open })\n  }\n\n\n  render() {\n    const itemClass = this.state.open ? \"open\" : \"\"\n\n    return <div\n        id=\"menu\"\n      >\n        <Items\n          {...this.props}\n          className={itemClass}\n          pane={this.pane}\n          closeMenu={this.closeMenu}\n        />\n        <svg\n          id=\"openMenu\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n\n          onClick={this.openMenu}\n        >\n          <Icon />\n        </svg>\n      </div>\n  }\n}\n\nexport default Menu","import React, { useState } from \"react\";\nimport { AudioProvider } from \"./AudioContext\"\n\nimport Views from \"../api/views\";\nimport Menu from \"./Menu\";\n\n\nconst App = (props) => {\n  const [ view, setView ] = useState(\"Activity\")\n\n  const selectFromMenu = (newView) => {\n    if (!newView) {\n      newView = \"Activity\"\n    }\n\n    setView(newView)\n  }\n\n  const View = Views[view];\n\n  return (\n    <AudioProvider>\n      <main className=\"split left--handed show--phonetic\">\n        <View\n          startActivity={selectFromMenu}\n        />\n        <Menu\n          selectFromMenu={selectFromMenu}\n        />\n      </main>\n    </AudioProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}