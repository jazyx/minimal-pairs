{"version":3,"sources":["components/Audio.jsx","components/Card.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["Component","StyledCard","styled","div","App","require","props","className","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+hHAG2BA,Y,OCMrBC,E,MAAaC,EAAOC,IAAV,4IC+CDC,GDtCIJ,YCZLK,EAAQ,I,kDAIpB,WAAYC,GAAQ,uCACZA,G,0CAGR,WACE,OAAO,uBAAMC,UAAU,QAAhB,UACL,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKC,IAAI,uBAAkBC,IAAI,UAC/B,mBAAGF,UAAU,WAAb,6BACA,mBAAGA,UAAU,WAAb,sBAEF,qBAAKA,UAAU,WACf,wBAAQA,UAAU,eAAlB,uBAEF,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKC,IAAI,kBAAkBC,IAAI,UAC/B,mBAAGF,UAAU,WAAb,8BACA,mBAAGA,UAAU,WAAb,sBAEF,qBAAKA,UAAU,WACf,wBAAQA,UAAU,eAAlB,wBAEF,mBAAGA,UAAU,OAAb,oCAGF,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,OAAOC,IAAI,sBAAsBC,IAAI,SACpD,qBAAKF,UAAU,eAAeC,IAAI,kBAAkBC,IAAI,UAC1D,mBAAGF,UAAU,WAAb,6BACA,mBAAGA,UAAU,WAAb,sBAEF,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,OAAOC,IAAI,sBAAsBC,IAAI,SACpD,qBAAKF,UAAU,eAAeC,IAAI,uBAAkBC,IAAI,UAC1D,mBAAGF,UAAU,WAAb,6BACA,mBAAGA,UAAU,WAAb,gC,GAxCQP,cCGHU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eb216c0e.chunk.js","sourcesContent":["import React, {Component} from 'react'\n\n\nclass AudioElement extends Component {\n  constructor(props) {\n    super(props)\n    this.playing = false\n    this.audio = new Audio(this.props.url)\n\n    this.startAudioPlayback = this.startAudioPlayback.bind(this)\n    this.stopAudioPlayback = this.stopAudioPlayback.bind(this)\n    this.togglePlayback = this.togglePlayback.bind(this)\n  }\n\n  startAudioPlayback() {\n    this.audio.currentTime = this.props.startTime\n    setTimeout(this.stopAudioPlayback, this.props.duration * 1000)\n\n    try {\n      this.audio.play()\n      this.playing = true\n    } catch(error) {\n      // User needs to click before audio can be played\n    }\n  }\n  \n  stopAudioPlayback() {\n    this.audio.pause()\n    this.playing = false\n  }\n\n  togglePlayback() {\n    if (this.playing) {\n      this.stopAudioPlayback()\n    } else {\n      this.startAudioPlayback()\n    }\n  }\n\n  render() {\n    return (\n      <button onClick={this.togglePlayback}>\n        Play\n      </button>\n    );\n  }\n\n  componentDidMount() {\n    this.audio.onended = this.stopAudioPlayback;\n    this.startAudioPlayback()\n  }\n\n  componentDidUpdate() {\n    this.startAudioPlayback()\n  }\n  \n  componentWillUnmount() {\n    this.audio.onended = null;\n    this.stopAudioPlayback()\n  }\n}\n\nexport default AudioElement;\n","/**\n * /src/components/Card.jsx\n */\n\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components'\n\n\nconst StyledCard = styled.div`\n  background-color: #fee;\n  width: 90vmin;\n  height: 90vmin;\n  margin: 0 auto;\n  border: 1px solid outset;\n`\n\n\nclass Card extends Component {\n  constructor(props) {\n    super(props)\n\n    this.method = this.method.bind(this)\n  }\n\n\n  method() {\n\n  }\n\n\n  render() {\n    return (\n      <StyledCard\n        \n      />\n    )\n  }\n}\n\n\nexport default Card","import React, { Component } from 'react'\n\nimport './App.css';\nimport AudioElement from './Audio'\nimport Card from './Card'\n\nconst pairs = require('../json/pairs.json')\nconst AUDIO_URL = \"/pairs.mp3\"\n\nclass App extends Component{\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return <main className=\"split\">\n      <div className=\"phonemes\">\n        <div className=\"phoneme-1\">\n          <div className=\"card-small\">\n            <img src=\"img/ɪ/bitch.jpg\" alt=\"bitch\" />\n            <p className=\"phonetic\">/bɪʧ/</p>\n            <p className=\"spelling\">bitch</p>\n          </div>\n          <div className=\"pocket\"></div>\n          <button className=\"play-phoneme\">ɪ</button>\n        </div>\n        <div className=\"phoneme-2\">\n          <div className=\"card-small\">\n            <img src=\"img/i/beach.jpg\" alt=\"beach\" />\n            <p className=\"phonetic\">/biːʧ/</p>\n            <p className=\"spelling\">beach</p>\n          </div>\n          <div className=\"pocket\"></div>\n          <button className=\"play-phoneme\">iː</button>\n        </div>\n        <p className=\"rule\">Tap or drag to here</p>\n      </div>\n\n      <div className=\"pairs\">\n        <div className=\"card-decoy\">\n            <img className=\"icon\" src=\"img/icons/sound.svg\" alt=\"icon\" />\n            <img className=\"illustration\" src=\"img/i/cheek.jpg\" alt=\"cheek\" />\n          <p className=\"phonetic\">/ʧɪk/</p>\n          <p className=\"spelling\">cheek</p>\n        </div>\n        <div className=\"card-cue\">\n            <img className=\"icon\" src=\"img/icons/sound.svg\" alt=\"icon\" />\n            <img className=\"illustration\" src=\"img/ɪ/chick.jpg\" alt=\"chick\" />\n          <p className=\"phonetic\">/ʧɪk/</p>\n          <p className=\"spelling\">chick</p>\n        </div>\n      </div>\n    </main>\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}